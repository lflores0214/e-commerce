{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionsStart } from './shop/shop.actions';\nconst sagaMiddleWare = createSagaMiddleware();\nconst middlewares = [sagaMiddleWare];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n} // sagaMiddleWare.run()\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/luisflores/Documents/projects/e-commerce/e-commerce/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleWare","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAIA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD,C,CAED;;;AAEA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AACP,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\n\n\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionsStart } from './shop/shop.actions';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleWare];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n// sagaMiddleWare.run()\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}