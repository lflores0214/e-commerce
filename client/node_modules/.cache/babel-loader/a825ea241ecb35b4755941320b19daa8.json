{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleWare = createSagaMiddleware();\nconst middlewares = [sagaMiddleWare];\nconsole.log(middlewares);\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};\nsagaMiddleWare.run(fetchCollectionsStart);","map":{"version":3,"sources":["/Users/luisflores/Documents/projects/e-commerce/e-commerce/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleWare","middlewares","console","log","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AACAE,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CL,EAAAA,WAAW,CAACM,IAAZ,CAAiBX,MAAjB;AACD;;AAGD,OAAO,MAAMY,KAAK,GAAGf,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AACP,OAAO,MAAMQ,SAAS,GAAGd,YAAY,CAACa,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf;AAEAT,cAAc,CAACU,GAAf,CAAmBZ,qBAAnB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { fetchCollectionsStart } from './shop/shop.sagas';\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleWare];\nconsole.log(middlewares)\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n\nsagaMiddleWare.run(fetchCollectionsStart)"]},"metadata":{},"sourceType":"module"}