{"ast":null,"code":"import React from \"react\";\nimport { ErrorImageOverlay, ErrorImageContainer, ErrorImageText } from \"./error-boundary.styles\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // process the error\n    return {\n      hasErrored: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"ERROR: \", error);\n    console.log(\"INFO: \", info);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/luisflores/Documents/projects/e-commerce/e-commerce/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","ErrorImageOverlay","ErrorImageContainer","ErrorImageText","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,cAHF,QAIO,yBAJP;;AAMA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKR,KAAL,CAAWC,UAAf,EAA2B;AACzB;AACD;;AACD,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AAxByC;;AA0B5C,eAAeb,aAAf","sourcesContent":["import React from \"react\";\n\nimport {\n  ErrorImageOverlay,\n  ErrorImageContainer,\n  ErrorImageText,\n} from \"./error-boundary.styles\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasErrored: false,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // process the error\n    return { hasErrored: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"ERROR: \", error);\n    console.log(\"INFO: \", info);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return ;\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}