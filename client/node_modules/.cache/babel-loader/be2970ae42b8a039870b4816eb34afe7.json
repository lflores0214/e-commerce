{"ast":null,"code":"var _jsxFileName = \"/Users/luisflores/Documents/projects/e-commerce/e-commerce/src/components/register/register.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { registerStart } from '../../redux/user/user.actions';\nimport { RegisterContainer, RegisterTitle } from './register.styles';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      const {\n        registerStart\n      } = this.props;\n      e.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      } else {\n        try {\n          register; // const { user } = await auth.createUserWithEmailAndPassword(\n          //   email,\n          //   password\n          // );\n          // await createUserProfileDocument(user, { displayName });\n\n          this.setState({\n            displayName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\"\n          });\n        } catch (error) {\n          console.log(error, \"error registering user\");\n        }\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(RegisterContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RegisterTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  registerStart: (email, password) => dispatch(registerStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/luisflores/Documents/projects/e-commerce/e-commerce/src/components/register/register.component.jsx"],"names":["React","connect","CustomButton","auth","createUserProfileDocument","FormInput","registerStart","RegisterContainer","RegisterTitle","Register","Component","constructor","handleSubmit","e","props","preventDefault","displayName","email","password","confirmPassword","state","alert","register","setState","error","console","log","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\"\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport FormInput from \"../form-input/form-input.component\";\n\nimport { registerStart } from '../../redux/user/user.actions';\nimport { RegisterContainer, RegisterTitle } from './register.styles';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n  }\n\n  handleSubmit = async (e) => {\n    const { registerStart } = this.props\n    e.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } else {\n      try {\n        register\n        // const { user } = await auth.createUserWithEmailAndPassword(\n        //   email,\n        //   password\n        // );\n\n        // await createUserProfileDocument(user, { displayName });\n\n        this.setState({\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        });\n      } catch (error) {\n        console.log(error, \"error registering user\");\n      }\n    }\n  };\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <RegisterContainer>\n        <RegisterTitle>I do not have a account</RegisterTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </RegisterContainer>\n    );\n  }\n}\nconst mapDispatchToProps= dispatch => ({\n  registerStart: (email, password) => dispatch(registerStart({email, password}))\n})\nexport default connect(null, mapDispatchToProps)(Register)\n"]},"metadata":{},"sourceType":"module"}