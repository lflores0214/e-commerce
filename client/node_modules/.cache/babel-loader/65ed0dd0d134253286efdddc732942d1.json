{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, registerSuccess, registerFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* register({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(registerSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(registerFailure(error));\n  }\n}\nexport function* onRegisterStart() {\n  yield takeLatest(UserActionTypes.REGISTER_START, register);\n}\nexport function* signInAfterRegister({\n  payload: {\n    user,\n    additionalData\n  }\n}) {}\nexport function* onRegisterSuccess() {\n  yield takeLatest(UserActionTypes.REGISTER_SUCCESS, signInAfterRegister);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onRegisterStart)]);\n}","map":{"version":3,"sources":["/Users/luisflores/Documents/projects/e-commerce/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","registerSuccess","registerFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","register","displayName","createUserWithEmailAndPassword","additionalData","onRegisterStart","REGISTER_START","signInAfterRegister","onRegisterSuccess","REGISTER_SUCCESS","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  registerSuccess,\n  registerFailure,\n} from \"./user.actions\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, ) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* register({ payload: { displayName, email, password } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(registerSuccess({ user, additionalData: { displayName } }));\n    yield createUserProfileDocument(user, { displayName });\n  } catch (error) {\n    yield put(registerFailure(error));\n  }\n}\nexport function* onRegisterStart() {\n  yield takeLatest(UserActionTypes.REGISTER_START, register);\n}\nexport function* signInAfterRegister({ payload: { user, additionalData } }) {\n\n}\nexport function* onRegisterSuccess() {\n  yield takeLatest(UserActionTypes.REGISTER_SUCCESS, signInAfterRegister);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onRegisterStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}